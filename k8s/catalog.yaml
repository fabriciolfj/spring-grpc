apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-service
  labels:
    app: catalog-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog-service
  template:
    metadata:
      labels:
        app: catalog-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: catalog-service
          image: fabricio211/catalog-service
          imagePullPolicy: IfNotPresent
          env:
            - name: GRPC_SERVER
              value: "5001"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgrescatalog:5432/postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgrescatalog-secret
            - name: SPRING_DATASOURCE_USERNAME
              value: "user"
          envFrom:
            - secretRef:
                name: postgrescatalog-secret
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 5"]
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15

---
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
spec:
  type: ClusterIP
  selector:
    app: review
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: http
